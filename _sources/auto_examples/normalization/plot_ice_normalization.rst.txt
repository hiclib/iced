
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/normalization/plot_ice_normalization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_normalization_plot_ice_normalization.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_normalization_plot_ice_normalization.py:


==================================
Normalizing a contact count matrix
==================================

This example showcases some basic filtering and normalization.

.. GENERATED FROM PYTHON SOURCE LINES 9-42



.. image:: /auto_examples/normalization/images/sphx_glr_plot_ice_normalization_001.png
    :alt: Raw contact counts, Normalized contact counts
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/build/hiclib/iced/iced/io/_io_pandas.py:56: UserWarning: Attempting to guess whether counts are 0 or 1 based
      warnings.warn(

    Text(0.5, 1.0, 'Normalized contact counts')





|

.. code-block:: default

    import matplotlib.pyplot as plt
    from matplotlib import colors

    from iced import datasets
    from iced import filter
    from iced import normalization


    # Loading a sample dataset
    counts, lengths = datasets.load_sample_yeast()

    # Filtering and normalizing contact count data
    normed = filter.filter_low_counts(counts, lengths=lengths, percentage=0.04)
    normed = normalization.ICE_normalization(normed)

    # Plotting the results using matplotlib
    chromosomes = ["I", "II", "III", "IV", "V", "VI"]

    fig, axes = plt.subplots(ncols=2, figsize=(12, 4))

    axes[0].imshow(counts, cmap="RdBu_r", norm=colors.SymLogNorm(1),
                   extent=(0, len(counts), 0, len(counts)))

    [axes[0].axhline(i, linewidth=1, color="#000000") for i in lengths.cumsum()]
    [axes[0].axvline(i, linewidth=1, color="#000000") for i in lengths.cumsum()]
    axes[0].set_title("Raw contact counts", fontweight="bold")

    m = axes[1].imshow(normed, cmap="RdBu_r", norm=colors.SymLogNorm(1),
                       extent=(0, len(counts), 0, len(counts)))
    [axes[1].axhline(i, linewidth=1, color="#000000") for i in lengths.cumsum()]
    [axes[1].axvline(i, linewidth=1, color="#000000") for i in lengths.cumsum()]
    cb = fig.colorbar(m)
    axes[1].set_title("Normalized contact counts", fontweight="bold")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.437 seconds)


.. _sphx_glr_download_auto_examples_normalization_plot_ice_normalization.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ice_normalization.py <plot_ice_normalization.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ice_normalization.ipynb <plot_ice_normalization.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
